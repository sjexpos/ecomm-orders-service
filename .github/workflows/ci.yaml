name: CI
on:
  push:
    branches:
    - '**'
    
jobs:

  build-app:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4.2.2
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven
      - name: Download users SDK
        run: |
          pwd
          ls -l
          export VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
          echo -e "VERSION=$VERSION"
          export USERS_API_ARTIFACT_ID=`curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-users-service/actions/artifacts | jq '.artifacts[] | "\(.id) \(.name)"' | tr -d '"' | grep users-service-api | head -n 1 | awk '{print $1}'`
          echo -e "artifact=$USERS_API_ARTIFACT_ID"
          curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-users-service/actions/artifacts/$USERS_API_ARTIFACT_ID/zip > users_api_artifact.zip
          unzip users_api_artifact.zip
          ls -l
          mvn install:install-file -Dfile=users-service-api-$VERSION.jar -DgroupId=io.oigres.ecomm -DartifactId=users-service-api -Dversion=$VERSION -Dpackaging=jar -DgeneratePom=true
          rm users-service-api-$VERSION.jar
          rm users_api_artifact.zip
          ls -l
          export USERS_SDK_ARTIFACT_ID=`curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-users-service/actions/artifacts | jq '.artifacts[] | "\(.id) \(.name)"' | tr -d '"' | grep users-service-sdk | head -n 1 | awk '{print $1}'`
          echo -e "artifact=$USERS_API_ARTIFACT_ID"
          curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-users-service/actions/artifacts/$USERS_SDK_ARTIFACT_ID/zip > users_sdk_artifact.zip
          unzip users_sdk_artifact.zip
          ls -l
          mvn install:install-file -Dfile=users-service-sdk-$VERSION.jar -DgroupId=io.oigres.ecomm -DartifactId=users-service-sdk -Dversion=$VERSION -Dpackaging=jar -DgeneratePom=true
          rm users-service-sdk-$VERSION.jar
          rm users_sdk_artifact.zip
      - name: Download products SDK
        run: |
          pwd
          ls -l
          export VERSION=`mvn help:evaluate -Dexpression=project.version -q -DforceStdout`
          echo -e "VERSION=$VERSION"
          export PRODUCTS_API_ARTIFACT_ID=`curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-products-service/actions/artifacts | jq '.artifacts[] | "\(.id) \(.name)"' | tr -d '"' | grep products-service-api | head -n 1 | awk '{print $1}'`
          echo -e "artifact=$PRODUCTS_API_ARTIFACT_ID"
          curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-products-service/actions/artifacts/$PRODUCTS_API_ARTIFACT_ID/zip > products_api_artifact.zip
          unzip products_api_artifact.zip
          ls -l
          mvn install:install-file -Dfile=products-service-api-$VERSION.jar -DgroupId=io.oigres.ecomm -DartifactId=products-service-api -Dversion=$VERSION -Dpackaging=jar -DgeneratePom=true
          rm products-service-api-$VERSION.jar
          rm products_api_artifact.zip
          ls -l
          export PRODUCTS_SDK_ARTIFACT_ID=`curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-products-service/actions/artifacts | jq '.artifacts[] | "\(.id) \(.name)"' | tr -d '"' | grep products-service-sdk | head -n 1 | awk '{print $1}'`
          echo -e "artifact=$PRODUCTS_SDK_ARTIFACT_ID"
          curl -L -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" https://api.github.com/repos/sjexpos/ecomm-products-service/actions/artifacts/$PRODUCTS_SDK_ARTIFACT_ID/zip > products_sdk_artifact.zip
          unzip products_sdk_artifact.zip
          ls -l
          mvn install:install-file -Dfile=products-service-sdk-$VERSION.jar -DgroupId=io.oigres.ecomm -DartifactId=products-service-sdk -Dversion=$VERSION -Dpackaging=jar -DgeneratePom=true
          rm products-service-sdk-$VERSION.jar
          rm products_sdk_artifact.zip
      - run: mvn --batch-mode --update-snapshots install
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4.0.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: Upload artifacts
        id: upload-compiled-sources
        uses: actions/upload-artifact@v4.3.3
        with:
          name: compiled-sources
          path: ./
      - name: Publish orders-service-api
        uses: actions/upload-artifact@v4.3.3
        with:
          name: orders-service-api
          path: ./api/target/orders-service-api-0.1.0-SNAPSHOT.jar
      - name: Publish orders-service-sdk
        uses: actions/upload-artifact@v4.3.3
        with:
          name: orders-service-sdk
          path: ./sdk/target/orders-service-sdk-0.1.0-SNAPSHOT.jar
    outputs:
      compiled-sources-artifact-id: ${{ steps.upload-compiled-sources.outputs.artifact-id }}

  build-docker-image:
    name: Create docker image
    needs: [build-app]
    runs-on: ubuntu-latest
    steps:
      - name: Download compiled sources
        uses: actions/download-artifact@v4.1.7
        with:
          name: compiled-sources
          path: ./
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: Dockerfile
          platforms: linux/amd64
          push: false
          tags: sjexpos/ecomm-orders-service:latest

  delete-unused-artifact:
    name: Delete unused artifact
    needs: [build-app, build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: Delete Artifact
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.deleteArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: ${{ needs.build-app.outputs.compiled-sources-artifact-id }}
            });

# mvn jacoco:prepare-agent jacoco:report surefire:test
